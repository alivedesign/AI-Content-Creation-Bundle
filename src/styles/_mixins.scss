// Responsive breakpoint mixins - Desktop first approach (max-width for mobile overrides)
@mixin mobile {
  @media (max-width: #{$breakpoint-md - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: #{$breakpoint-lg - 1px}) {
    @content;
  }
}

// Legacy mixins for backwards compatibility
@mixin sm {
  @media (min-width: $breakpoint-sm) {
    @content;
  }
}

@mixin md {
  @media (min-width: $breakpoint-md) {
    @content;
  }
}

@mixin lg {
  @media (min-width: $breakpoint-lg) {
    @content;
  }
}

@mixin xl {
  @media (min-width: $breakpoint-xl) {
    @content;
  }
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Container mixin
@mixin container {
  width: 100%;
  max-width: $container-max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: $container-padding;
  padding-right: $container-padding;
}

// Button reset
@mixin button-reset {
  border: none;
  background: none;
  padding: 0;
  cursor: pointer;
  font-family: inherit;
}

// Input reset
@mixin input-reset {
  border: none;
  background: none;
  padding: 0;
  font-family: inherit;
  font-size: inherit;

  &:focus {
    outline: none;
  }
}

// Transition mixin
@mixin transition($properties...) {
  transition-property: $properties;
  transition-duration: $transition-base;
  transition-timing-function: ease-in-out;
}

// Hover effect
@mixin hover-lift {
  @include transition(transform, box-shadow);

  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
}

// Text truncate
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Line clamp
@mixin line-clamp($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Aspect ratio (for images/videos)
@mixin aspect-ratio($width, $height) {
  position: relative;

  &::before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
